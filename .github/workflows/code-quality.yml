name: Code Quality Analysis

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  code-quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Enable Corepack
        run: corepack enable

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --immutable

      - name: Run comprehensive linting
        run: |
          echo "Running ESLint with extended rules..."
          yarn lint --format=json --output-file=eslint-report.json || true
          yarn lint # Show output to console

      - name: Check code complexity
        run: |
          echo "Analyzing code complexity..."
          if command -v npx &> /dev/null; then
            npx complexity-report --format=json --output=complexity-report.json src/ || true
          fi

      - name: Check duplicate code
        run: |
          echo "Checking for duplicate code..."
          if command -v npx &> /dev/null; then
            npx jscpd src/ --reporters=json --output=./cpd-report || true
          fi

      - name: Analyze bundle size impact
        if: github.event_name == 'pull_request'
        run: |
          echo "Analyzing bundle size impact..."
          yarn build
          
          # Get current bundle size
          if [ -f "dist/index.js" ]; then
            current_size=$(stat -c%s "dist/index.js")
            echo "Current bundle size: $current_size bytes"
            
            # Store for comparison (in a real setup, you'd compare with main branch)
            echo "BUNDLE_SIZE=$current_size" >> $GITHUB_ENV
          fi

      - name: Generate code quality report
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let report = '## üìä Code Quality Report\n\n';
            
            // ESLint results
            if (fs.existsSync('eslint-report.json')) {
              try {
                const eslintData = JSON.parse(fs.readFileSync('eslint-report.json', 'utf8'));
                const totalErrors = eslintData.reduce((sum, file) => sum + file.errorCount, 0);
                const totalWarnings = eslintData.reduce((sum, file) => sum + file.warningCount, 0);
                
                report += '### üîç ESLint Analysis\n';
                report += `- **Errors**: ${totalErrors}\n`;
                report += `- **Warnings**: ${totalWarnings}\n\n`;
                
                if (totalErrors > 0) {
                  report += '‚ö†Ô∏è **Please fix all ESLint errors before merging**\n\n';
                }
              } catch (e) {
                report += '### üîç ESLint Analysis\n‚ùå Failed to parse ESLint report\n\n';
              }
            }
            
            // Bundle size
            if (process.env.BUNDLE_SIZE) {
              const sizeKB = Math.round(parseInt(process.env.BUNDLE_SIZE) / 1024);
              report += '### üì¶ Bundle Size\n';
              report += `- **Current size**: ${sizeKB} KB\n\n`;
              
              if (sizeKB > 500) {
                report += '‚ö†Ô∏è **Bundle size is quite large. Consider optimizing.**\n\n';
              }
            }
            
            report += '---\n*Generated by Code Quality Analysis workflow*';
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: report
            });

      - name: Upload code quality artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: code-quality-reports
          path: |
            eslint-report.json
            complexity-report.json
            cpd-report/
          retention-days: 7
