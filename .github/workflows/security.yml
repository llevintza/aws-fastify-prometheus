name: Security Analysis

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  schedule:
    # Run security scan weekly on Mondays at 9 AM UTC
    - cron: '0 9 * * 1'

jobs:
  security-scan:
    name: Security Vulnerability Scan
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Enable Corepack
        run: corepack enable

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --immutable

      - name: Run npm audit if lockfile exists
        run: |
          if [ -f package-lock.json ]; then
            npm audit --audit-level=moderate
          else
            echo "No lockfile found, skipping npm audit"
          fi

      - name: Run Yarn audit
        run: |
          echo "Running Yarn security audit..."
          yarn audit --level moderate --json > yarn-audit-report.json || true
          yarn audit --level moderate || true

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

      - name: Run Semgrep security scan
        uses: returntocorp/semgrep-action@v1
        with:
          config: >-
            p/security-audit
            p/secrets
            p/javascript
            p/typescript
            p/nodejs
        env:
          SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}

      - name: Check for secrets in code
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD
          extra_args: --debug --only-verified

      - name: Analyze security report
        run: |
          echo "Analyzing security reports..."
          
          # Check npm audit results
          if [ -f "audit-report.json" ]; then
            echo "Checking npm audit results..."
            vulnerabilities=$(cat audit-report.json | jq '.metadata.vulnerabilities | length' 2>/dev/null || echo "0")
            echo "Found $vulnerabilities vulnerabilities in npm audit"
            
            if [ "$vulnerabilities" -gt "0" ]; then
              echo "⚠️ Security vulnerabilities found. Please review and fix."
              cat audit-report.json | jq '.vulnerabilities' 2>/dev/null || echo "Could not parse vulnerability details"
            fi
          fi

      - name: Generate security summary
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let summary = '## 🔒 Security Analysis Summary\n\n';
            
            // npm audit results
            if (fs.existsSync('audit-report.json')) {
              try {
                const auditData = JSON.parse(fs.readFileSync('audit-report.json', 'utf8'));
                const vulnCount = auditData.metadata?.vulnerabilities || 0;
                
                summary += '### 🛡️ Dependency Vulnerabilities\n';
                summary += `- **npm audit**: ${vulnCount} vulnerabilities found\n`;
                
                if (vulnCount > 0) {
                  summary += '⚠️ **Please review and update vulnerable dependencies**\n';
                }
              } catch (e) {
                summary += '### 🛡️ Dependency Vulnerabilities\n❌ Could not parse audit report\n';
              }
            }
            
            summary += '\n### 🔍 Additional Security Checks\n';
            summary += '- ✅ CodeQL static analysis completed\n';
            summary += '- ✅ Semgrep security rules applied\n';
            summary += '- ✅ Secret scanning performed\n\n';
            
            summary += '---\n*Generated by Security Analysis workflow*';
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });

      - name: Upload security reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-reports
          path: |
            audit-report.json
            yarn-audit-report.json
          retention-days: 30
