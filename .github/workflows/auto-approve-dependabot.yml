name: Auto-approve Dependabot PRs

on:
  pull_request_target:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write
  checks: read
  statuses: read

jobs:
  auto-approve:
    name: Auto-approve Dependabot PRs
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Get PR metadata
        id: pr-metadata
        uses: dependabot/fetch-metadata@v1
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Wait for CI checks to complete
        uses: lewagon/wait-on-check-action@v1.3.3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          check-name: 'CI/CD'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 30
          allowed-conclusions: success,neutral,skipped

      - name: Wait for security checks to complete
        uses: lewagon/wait-on-check-action@v1.3.3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          check-name: 'Security Analysis'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 30
          allowed-conclusions: success,neutral,skipped

      - name: Wait for code quality checks to complete
        uses: lewagon/wait-on-check-action@v1.3.3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          check-name: 'Code Quality'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 30
          allowed-conclusions: success,neutral,skipped

      - name: Check for security vulnerabilities
        id: security-check
        run: |
          echo "Checking for critical/severe security vulnerabilities..."
          
          # Download security scan results (if available)
          # This is a placeholder - you might need to adjust based on your security tool outputs
          
          # For now, we'll check if the security workflow passed
          # In practice, you might want to parse actual security reports
          
          echo "security_check_passed=true" >> $GITHUB_OUTPUT

      - name: Auto-approve for patch and minor updates
        if: |
          (steps.pr-metadata.outputs.update-type == 'version-update:semver-patch' || 
           steps.pr-metadata.outputs.update-type == 'version-update:semver-minor') &&
          steps.security-check.outputs.security_check_passed == 'true'
        run: |
          echo "Auto-approving ${{ steps.pr-metadata.outputs.update-type }} update for ${{ steps.pr-metadata.outputs.dependency-names }}"
          gh pr review --approve "${{ github.event.pull_request.number }}" --body "‚úÖ **Auto-approved by bot**

          This PR has been automatically approved because:
          - It's a ${{ steps.pr-metadata.outputs.update-type }} update
          - All CI/CD checks passed
          - No critical/severe security vulnerabilities detected
          - Dependency: ${{ steps.pr-metadata.outputs.dependency-names }}

          The changes have been reviewed by automated processes and are safe to merge."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Auto-merge for patch updates only
        if: |
          steps.pr-metadata.outputs.update-type == 'version-update:semver-patch' &&
          steps.security-check.outputs.security_check_passed == 'true'
        run: |
          echo "Auto-merging patch update for ${{ steps.pr-metadata.outputs.dependency-names }}"
          gh pr merge --squash "${{ github.event.pull_request.number }}" --body "ü§ñ Auto-merged patch update"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Comment on major updates
        if: steps.pr-metadata.outputs.update-type == 'version-update:semver-major'
        run: |
          gh pr comment "${{ github.event.pull_request.number }}" --body "‚ö†Ô∏è **Major version update detected**

          This PR contains a major version update for: ${{ steps.pr-metadata.outputs.dependency-names }}

          Major updates may contain breaking changes and require manual review.
          Please review the changelog and test thoroughly before merging.

          - Check the dependency's CHANGELOG or release notes
          - Run tests locally if needed
          - Verify no breaking changes affect your code"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify-approval:
    name: Notify on approval
    runs-on: ubuntu-latest
    needs: auto-approve
    if: github.actor == 'dependabot[bot]' && success()
    
    steps:
      - name: Send notification
        run: |
          echo "Dependabot PR auto-approved successfully!"
          echo "PR: ${{ github.event.pull_request.html_url }}"
